---
import { type CollectionEntry, getCollection } from 'astro:content';
import ArticleLayout from '../../layouts/ArticleLayout.astro';

export async function getStaticPaths() {
	const texts = await getCollection('texts');
	
	// 公開日順にソート（新しい記事が前に来るように）
	const sortedTexts = texts.sort((a, b) => 
		new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
	);
	
	return sortedTexts.map((text: CollectionEntry<'texts'>, index: number) => {
		const previousText = sortedTexts[index + 1] || null; // より古い記事
		const nextText = sortedTexts[index - 1] || null; // より新しい記事
		
		return {
			params: { slug: text.slug },
			props: { 
				text,
				previousPost: previousText ? {
					slug: `/texts/${previousText.slug}`,
					data: previousText.data
				} : null,
				nextPost: nextText ? {
					slug: `/texts/${nextText.slug}`,
					data: nextText.data
				} : null
			},
		};
	});
}

const { text, previousPost, nextPost } = Astro.props;
const { Content } = await text.render();
const shareUrl = `https://nawo.to/texts/${text.slug}`;
---

<ArticleLayout 
	title={text.data.title}
	content={text}
	previousPost={previousPost}
	nextPost={nextPost}
	shareUrl={shareUrl}
>
	<Content />
</ArticleLayout> 