---
import { getCollection } from 'astro:content';
import ArticleLayout from '../layouts/ArticleLayout.astro';
import { getLogSlug } from '../utils/slug';

export async function getStaticPaths() {
  const logsPosts = await getCollection('logs');

  // 公開日順にソート（新しい記事が前に来るように）
  const sortedLogsPosts = logsPosts.sort(
    (a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
  );

  return sortedLogsPosts.map((post, index: number) => {
    const previousPost = sortedLogsPosts[index + 1] || undefined;
    const nextPost = sortedLogsPosts[index - 1] || undefined;

    const fileName = post.slug.replace(/^\d{4}\//, '');
    const dateMatch = fileName.match(/^(\d{4})-(\d{2})-(\d{2})-(.+)$/);

    let urlSlug = '';
    if (dateMatch) {
      const [, year, month, day, slug] = dateMatch;
      urlSlug = `${year}/${month}/${day}/${slug}`;
    } else {
      urlSlug = fileName.toLowerCase();
    }

    return {
      params: { slug: urlSlug },
      props: {
        post,
        previousPost: previousPost
          ? {
              slug: getLogSlug(previousPost.slug),
              collection: 'logs',
              data: previousPost.data,
            }
          : undefined,
        nextPost: nextPost
          ? {
              slug: getLogSlug(nextPost.slug),
              collection: 'logs',
              data: nextPost.data,
            }
          : undefined,
      },
    };
  });
}

const { post, previousPost, nextPost } = Astro.props;
const { Content } = await post.render();
const shareUrl = `https://nawo.to/${Astro.params.slug}`;
---

<ArticleLayout
  title={post.data.title}
  content={post}
  previousPost={previousPost}
  nextPost={nextPost}
  shareUrl={shareUrl}
>
  <Content />
</ArticleLayout>
