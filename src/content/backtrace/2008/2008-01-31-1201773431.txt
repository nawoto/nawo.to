
AUTHOR: nawoto
TITLE:  Railsアプリで開発時に OpenID 認証をローカルだけで確認する方法
BASENAME: 20080131/1201773431
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 01/31/2008 18:57:11
-----
BODY:
<p><br />
最近、認証部分を <a class="keyword" href="http://d.hatena.ne.jp/keyword/OpenID">OpenID</a> に対応する事も多いみたいで、会社で「開発時に外部の <a class="keyword" href="http://d.hatena.ne.jp/keyword/OpenID">OpenID</a> プロバイダを利用してます？」って聞かれたんで、普段やってる方法を晒してみよう。<br />
<br />
利用するのは <a class="keyword" href="http://d.hatena.ne.jp/keyword/Ruby">Ruby</a> 向けの <a class="keyword" href="http://d.hatena.ne.jp/keyword/OpenID">OpenID</a> ライブラリ <a href="http://openidenabled.com/ruby-openid/">ruby-openid</a> で、以下のようにインストールする。</p>
<pre class="code" data-lang="" data-unlink> % gem install ruby-openid</pre><p>で、ライブラリの中に <a class="keyword" href="http://d.hatena.ne.jp/keyword/OpenID">OpenID</a> プロバイダのサンプル実装(<a class="keyword" href="http://d.hatena.ne.jp/keyword/rails">rails</a>_<a class="keyword" href="http://d.hatena.ne.jp/keyword/openid">openid</a>)があるので、それを利用しています。</p>
<pre class="code" data-lang="" data-unlink> % cp -pr $WHERE_GEM_HOME/gems/ruby-openid-2.0.x/examples/rails_openid ~/tmp
 # 起動すると log ディレクトリとか作成されるので、一応どっかにコピー
 % cp ~/tmp/rails_openid
 % ruby ./script/server -p 3001</pre><p>これで <span data-unlink>http://localhost:3001</span> とかにアクセスすると、ユーザ登録用のフォームが表示されるので、任意の <a class="keyword" href="http://d.hatena.ne.jp/keyword/OpenID">OpenID</a> のアカウント(例えば<span data-unlink>http://localhost:3001/user/test</span> みたいなの)が発行できます。<br />
後はこれをクライアント(Relying Party)側で入力すれば ok。</p><br />
<p>これだとクライアント側からのパラメータも確認できるので、開発時にはそれなりに重宝してます。</p><br />
<p>ただ、<a class="keyword" href="http://d.hatena.ne.jp/keyword/Rails">Rails</a> 2.0 ではこのサンプルは動作しないので、<a class="keyword" href="http://d.hatena.ne.jp/keyword/Rails">Rails</a> 1.2.x 系が必要です。<br />
また、<a class="keyword" href="http://d.hatena.ne.jp/keyword/ruby">ruby</a>-<a class="keyword" href="http://d.hatena.ne.jp/keyword/openid">openid</a> 1.x 系のサンプルは <a class="keyword" href="http://d.hatena.ne.jp/keyword/Rails">Rails</a> 1.2 でも動作しないので、問題無ければ <a class="keyword" href="http://d.hatena.ne.jp/keyword/ruby">ruby</a>-<a class="keyword" href="http://d.hatena.ne.jp/keyword/openid">openid</a> 2.x 系を利用するのがお手軽だと思います。</p><br />
<p>(追記:20080208)<br />
<a href="http://blog.hatena.ne.jp/yukizm/">id:yukizm</a> さんに <a class="keyword" href="http://d.hatena.ne.jp/keyword/Rails">Rails</a> 2.0 でも動作する方法を教えてもらいました。</p>
<pre class="code" data-lang="" data-unlink> % rake rails:update</pre><p>して、config/enviroment.rb を</p>
<pre class="code" data-lang="" data-unlink> config.action_controller.session = { :session_key =&gt; &#34;_session_id_2&#34;, :secret =&gt; &#34;rake secret の結果をコピペ&#34;}</pre><p>のようにちゃんとアップデートの手順を踏めば、動作しました。</p>

-----
COMMENT:
AUTHOR: yukizm
DATE: 02/06/2008 19:46:44
rake rails:update<br><br>でRails 2.0でも動きまっす！
-----
