
AUTHOR: nawoto
TITLE:  ちょっとだけ気になった
BASENAME: 20081008/1223482580
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 10/08/2008 01:16:20
-----
BODY:
<p><br />
<a href="http://d.hatena.ne.jp/higayasuo/20081006/1223275256">Rails&#x30D0;&#x30D6;&#x30EB;&#x306F;&#x7D42;&#x308F;&#x3063;&#x305F; - &#x3072;&#x304C;&#x3084;&#x3059;&#x3092; blog</a><br />
</p>

    <blockquote>
        <p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Rails">Rails</a>は、スタートアップ企業が使う開発言語としては、確固たる地位を築いていると思います。それでいいよね。無理にSIなんかに使う必要はない。もちろん、<a class="keyword" href="http://d.hatena.ne.jp/keyword/Rails">Rails</a>にあったSI案件もあると思うけど、SIなら<a class="keyword" href="http://d.hatena.ne.jp/keyword/Java">Java</a>とかの方が向いている気がする。</p>

    </blockquote>
<p>おそらく、そういう強い意味で書かれたんじゃないと思うのですが、ここ 2 年ほど SI 案件で <a class="keyword" href="http://d.hatena.ne.jp/keyword/Rails">Rails</a> を使ってますが、あまりそういうのは感じた事が無いなぁ〜。</p><br />
<p>また、元のエントリで触れられてますが、<a class="keyword" href="http://d.hatena.ne.jp/keyword/Rails">Rails</a> に限らず新しいチャレンジ(自社に実績の少ない<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D5%A5%EC%A1%BC%A5%E0%A5%EF%A1%BC%A5%AF">フレームワーク</a>やそれ以外の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%DF%A5%C9%A5%EB%A5%A6%A5%A7%A5%A2">ミドルウェア</a>、プロジェクトの運営方法等)を導入する際は、流行っているからとかではなく、きちんと案件の特性、リスクやコストをきちんと分析し、スパイクなどを実施してから導入するって事をきちんとやっていくべきですね。</p><br />
<p>って話は、昔、<a href="http://d.hatena.ne.jp/nawoto/20071225/1198547820">&#x300C;Rails &#x3060;&#x3068;&#x5B9A;&#x6642;&#x3067;&#x5E30;&#x308C;&#x308B;&#x3063;&#x3066;&#x8A00;&#x3063;&#x305F;&#x30E4;&#x30C4;&#x306F;&#x8AB0;&#x3060;ww&#x300D;</a>ってお題でLT やったのを思いだしたwww</p>

-----
