---
import type { CollectionEntry } from 'astro:content';
import { generateArticleExcerpts, groupArticlesByYear, getSortedYears } from '../utils/content';
import ArticleCard from './ArticleCard.astro';
import YearlyArticleCard from './YearlyArticleCard.astro';
import YearlyViewToggle from './YearlyViewToggle.astro';
import type { CollectionType } from '../utils/collections';

interface Props {
  articles: CollectionEntry<CollectionType>[];
  getArticleUrl: (collection: CollectionType, slug: string) => string;
  showBorder?: boolean;
  activeTab: 'logs' | 'texts' | 'backtrace';
}

const { articles, getArticleUrl, showBorder = true, activeTab } = Astro.props;

// 記事の抜粋を生成
const articlesWithExcerpt = await generateArticleExcerpts(articles);

// 記事を年別にグループ化
const articlesByYear = groupArticlesByYear(articlesWithExcerpt);

// 年を降順でソート
const years = getSortedYears(articlesByYear);
---

<YearlyViewToggle years={years} activeTab={activeTab} />

<!-- Flat View (Default) -->
<main id="flat-view" class="view-content" role="tabpanel" aria-labelledby="flat-mode">
  <ol style="list-style: none;">
    {
      articlesWithExcerpt.map((article) => (
        <ArticleCard
          article={article}
          excerpt={article.excerpt}
          url={getArticleUrl(article.collection, article.slug)}
          showBorder={showBorder}
        />
      ))
    }
  </ol>
</main>

<!-- Yearly View -->
<main id="yearly-view" class="view-content hidden" role="tabpanel" aria-labelledby="yearly-mode">
  {
    years.map((year) => {
      const yearArticles = articlesByYear[year];
      return (
        <section class="year-section mb-8" data-year={year} aria-labelledby={`year-${year}`}>
          <div class="flex items-center justify-between mb-4">
            <h2
              id={`year-${year}`}
              class="text-xl sm:text-2xl font-bold font-titillium text-gray-800"
            >
              {year}
            </h2>
            <button
              class="back-to-top-btn px-2 py-1 text-sm font-mono border rounded-sm hover:bg-gray-100 transition-colors"
              title="ナビゲーションに戻る"
              aria-label="年別ナビゲーションに戻る"
            >
              ↑
            </button>
          </div>
          <div class="space-y-3 mx-auto w-11/12 sm:w-full">
            {yearArticles.map((article) => (
              <YearlyArticleCard article={article} getArticleUrl={getArticleUrl} />
            ))}
          </div>
        </section>
      );
    })
  }
</main>

<style>
  /* 年別表示のモバイル最適化 */
  @media (max-width: 640px) {
    .year-section article {
      padding: 0.75rem;
    }

    .year-section .flex-wrap {
      gap: 0.25rem;
    }

    .year-section .flex-wrap span {
      font-size: 0.75rem;
      padding: 0.25rem 0.5rem;
    }
  }

  .back-to-top-btn {
    @reference @apply text-gray-600 border-gray-300;
  }
  .back-to-top-btn:hover {
    @reference @apply text-black border-black;
  }
</style>

